buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'jpa-basic'
version = '1.0.0'

java {
    sourceCompatibility = '17'
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.2.0'
    testImplementation 'org.springframework.security:spring-security-test'


    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
}

//QueryDsl 경로 설정
def querydslDir = "$buildDir/generated/querydsl"

//QueryDsl 설정
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
//QueryDsl 이것도 경로..?
sourceSets {
    main.java.srcDir querydslDir
}
//QueryDsl annotation + class 설정
configurations { // 이놈
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
//QueryDsl 컴파일 설정
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
// clean 실행시 QueryDsl에서 생성한 패키지 삭제
clean {
    delete file(querydslDir)
}

tasks.named('test') {
    useJUnitPlatform()
}

